
@{
    ViewData["Title"] = "数据库管理";
    Layout = "~/Views/_main.cshtml";
}
<div class="layui-fluid">
    <div class="layui-card">
        @*表格上方搜索*@
        <div class="layui-form layui-card-header layuiadmin-card-header-auto">
            <div class="layui-form-item">
                <div class="layui-inline">
                    <label class="layui-form-label">数据库名称</label>
                    <div class="layui-input-inline">
                        <input type="text" name="databasename" id="databasename" value="" placeholder="数据库名称" autocomplete="off" class="layui-input">
                    </div>
                </div>
                <div class="layui-inline">
                    <button class="layui-btn" id="btnsearch" type="button" data-type="reload">查找</button>
                </div>
            </div>
           
        </div>

        <div class="layui-card-body">
            <script type="text/html" id="toolbarDemo">
                <div class="layui-btn-container">
                    <div class="layui-btn layui-btn-primary layui-btn-xs" lay-event="add"><i class="layui-icon layui-icon-add-1"></i>新增</div>
                    <div class="layui-btn layui-btn-primary layui-btn-xs" lay-event="edit"><i class="layui-icon layui-icon-edit"></i>修改</div>
                    <div class="layui-btn layui-btn-primary layui-btn-xs" lay-event="del"><i class="layui-icon layui-icon-delete"></i>删除</div>
                </div>
            </script>
            <table id="tb1" class="layui-table" lay-filter="tb1"></table>
            @*表格行操作 新增、修改、删除*@
            @*<script type="text/html" id="actions">
                <a class="layui-btn layui-btn-primary layui-btn-xs" lay-event="edit">编辑</a>
                <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
            </script>*@
        </div>

    </div>
</div>
<input id="status" type="hidden" />
@section js{
    <script>
        layui.config({
            base: '@Url.Content("~/")' //静态资源所在路径
        }).extend({
            index: 'lib/index'//主入口模块
            }).use(['index', 'table', "laydate"], function () {
            var $ = layui.$
                , table = layui.table
                , layer = layui.layer
                , laydate = layui.laydate;

            var dataInfo = table.render({
                elem: '#tb1'
                , url: "@Url.Action("GetDatabaseList", "Database")"
                , limit: 20
                , limits: [20, 40, 60, 80, 100, 500, 1000]
                , done: function (res, curr, count) {
                    //如果是异步请求数据方式，res即为你接口返回的信息。
                    //如果是直接赋值的方式，res即为：{data: [], count: 99} data为当前页数据、count为数据总长度
                    //得到当前页码
                    //console.log(curr);
                    //得到数据总量
                    //console.log(count);
                }
                , totalRow: true
                , toolbar: '#toolbarDemo'//
                , defaultToolbar: ['filter', 'print', 'exports']
                , title: '数据库列表'
                , height: 'full-138'
                , cols: [[
                    { type: 'checkbox' },
                    { title: '序号', type: 'numbers' , }
                    , { field: 'id', width: 80, title: 'ID', sort: true, align: 'center', hide: true }
                    , { field: 'databaseName', width: 120, title: '数据库名称' }
                    , { field: 'desc', width: 100, title: '描述' }
                    , { field: 'connection', width: 320, title: '连接字符串' }
                    , { field: 'dbType', width: 100, title: '数据库类型' }
                    , { field: 'changeTime', width: 100, title: '更新时间' }
                    , { field: 'isDeleted', width: 100, title: '是否删除' } 
                ]]
                , page: {
                    theme: '#a70000', first: '首页'
                    , last: '尾页'
                }
            });

            active = {
                reload: function () {
                    var databasename = $("#databasename").val();
                    table.reload('tb1', {
                        page: { curr: 1 }
                        , where: {
                            databasename: databasename,
                        }
                    }, 'data');
                }
            };

                //监听头工具栏事件
            table.on('toolbar(tb1)', function (obj) {
                    var checkStatus = table.checkStatus(obj.config.id)
                        , data = checkStatus.data; //获取选中的数据
                    switch (obj.event) {
                        case 'add':
                            //layer.msg('添加');
                            add();
                            break;
                        case 'edit':
                            if (data.length === 0) {
                                layer.msg('请选择一行');
                            } else if (data.length > 1) {
                                layer.msg('只能同时编辑一个');
                            } else {
                                //layer.alert('编辑 [id]：' + checkStatus.data[0].uid);
                                edit(checkStatus.data[0].id);
                            }
                            break;
                        case 'del':
                            if (data.length === 0) {
                                layer.msg('请选择一行');
                            } else {

                                layer.confirm('真的删除行么', function (index) { 
                                    layer.close(index);
                                    //向服务端发送删除指令
                                    del(index,checkStatus.data[0].id);
                                });
                            }
                            break;
                    };
            });

            $('#searchbtn').on('click', function () {
                var type = $(this).data('type');
                active[type] ? active[type].call(this) : '';
            });
             //新增
            function add() {
                var url = '@Url.Action("Add", "Database")';
                var index =layui.layer.open({
                    type: 2,
                    area: ['80%', '60%'],
                    content: url,
                    cancel: function (index, layero) {
                        layer.close(index);
                        return false;
                    },
                    end: function () {
                        if ($("#status").val() == 0) {
                            dataInfo.reload();
                            $("#status").val(-100);
                        }
                    }
                });
                layer.full(index);
            }
            //编辑
            function edit(id) {
                var url = '@Url.Action("Edit", "Database")' + '?Id=' + id;
               var index= layui.layer.open({
                    type: 2,
                    area: ['80%', '60%'],
                    content: url,
                    cancel: function (index, layero) {
                        layer.close(index);
                        return false;
                    },
                    end: function () {
                        if ($("#status").val() == 0) {
                            dataInfo.reload();
                            $("#status").val(-100);
                        }
                    }
               });
               layer.full(index);
            }
            //删除
            function del(index,id) {
                var url = '@Url.Action("Del", "Database")' + '?Id=' + id;
                $.getJSON(url, function (result) {
                    $("#status").val(result.code);
                    returnBackMsg(index, result, "记录删除");
                    if ($("#status").val() === '0') {
                        dataInfo.reload();
                        $("#status").val(-100);
                    }
                });
            } 

                $('#btnsearch').on('click', function () {
                    var type = $(this).data('type');
                    active[type] ? active[type].call(this) : '';
                });
        });

        // result{data,msg,code} action 0 添加，1 修改
        function returnBackMsg(index, result, action) {
            layer.close(index);
            var code = 0;
            var status = "";
            if (result.code == 0) {
                code = 6;
                status = "成功";
            }
            else {
                code = 5;
                status = "失败";
            }
            layer.msg(action + status, { icon: code });
        }
    </script>
}





