#pragma checksum "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "98c14a3190c28ee4ce7cfabcdedef9b82ed1c5d5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ProjectCodeGenerate_List), @"mvc.1.0.view", @"/Views/ProjectCodeGenerate/List.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
using Lym.Models.Entity.Codegenerate;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"98c14a3190c28ee4ce7cfabcdedef9b82ed1c5d5", @"/Views/ProjectCodeGenerate/List.cshtml")]
    public class Views_ProjectCodeGenerate_List : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/style/layui-select.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("media", new global::Microsoft.AspNetCore.Html.HtmlString("all"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
  
    ViewData["Title"] = "项目生成";
    Layout = "~/Views/_main.cshtml";

    var fileProjects = ViewBag.fileProjects as List<FileProject>;
    var fileProjecttypes = ViewBag.fileProjecttypes as List<FileProjecttype>;
    var databaseList = ViewBag.databaseList as List<Database>;

#line default
#line hidden
#nullable disable
            DefineSection("css", async() => {
                WriteLiteral("\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "98c14a3190c28ee4ce7cfabcdedef9b82ed1c5d54438", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n");
            }
            );
            WriteLiteral("<div class=\"layui-fluid\">\n    <div class=\"layui-card\">\n");
            WriteLiteral(@"        <div class=""layui-form layui-card-header layuiadmin-card-header-auto"">
            <div class=""layui-form-item"">
                <div class=""layui-inline"">
                    <label class=""layui-form-label"">项目</label>
                    <div class=""layui-input-inline"">
                        <select name=""projectId"" id=""projectId"">
");
            WriteLiteral("                                            <option value=\"0\">全部</option> ");
#nullable restore
#line 23 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
                                                                          foreach (var item in fileProjects)
                                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            <option");
            BeginWriteAttribute("value", " value=\"", 1076, "\"", 1092, 1);
#nullable restore
#line 25 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
WriteAttributeValue("", 1084, item.Id, 1084, 8, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 25 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
                                                                Write(item.ProjectName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</option> ");
#nullable restore
#line 25 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
                                                                                                } 

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                        </select>
                    </div>
                </div>
                <div class=""layui-inline"">
                    <label class=""layui-form-label"">项目类型</label>
                    <div class=""layui-input-inline"">
                        <select name=""projectTypeId"" id=""projectTypeId"">
");
            WriteLiteral("                                            <option value=\"0\">全部</option> ");
#nullable restore
#line 34 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
                                                                          foreach (var item in fileProjecttypes)
                                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            <option");
            BeginWriteAttribute("value", " value=\"", 1696, "\"", 1712, 1);
#nullable restore
#line 36 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
WriteAttributeValue("", 1704, item.Id, 1704, 8, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 36 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
                                                                Write(item.ProjectTypeName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</option> ");
#nullable restore
#line 36 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
                                                                                                    } 

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                        </select>
                    </div>
                </div>
                <div class=""layui-inline"">
                    <label class=""layui-form-label"">数据库</label>
                    <div class=""layui-input-inline"">
                        <select name=""databaseIds"" id=""databaseIds"" multiple=""multiple"">
");
            WriteLiteral("                                            <option");
            BeginWriteAttribute("value", " value=\"", 2164, "\"", 2172, 0);
            EndWriteAttribute();
            WriteLiteral(">请选择数据库</option> ");
#nullable restore
#line 45 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
                                                                             foreach (var item in databaseList)
                                                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                            <option");
            BeginWriteAttribute("value", " value=\"", 2334, "\"", 2350, 1);
#nullable restore
#line 47 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
WriteAttributeValue("", 2342, item.Id, 2342, 8, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 47 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
                                                                Write(item.DatabaseName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</option> ");
#nullable restore
#line 47 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
                                                                                                 } 

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                        </select>
                    </div>
                </div>

                <div class=""layui-inline"">
                    <button class=""layui-btn"" id=""btnsearch"" type=""button"" data-type=""reload"">查找</button>
                </div>
                <div class=""layui-inline"">
                    <button class=""layui-btn"" id=""btnGenerate"" type=""button"" data-type=""Generate"">点击生成项目</button>
                </div>
                <div class=""layui-inline"">
                    <button class=""layui-btn"" id=""btnGeneratesln"" type=""button"" data-type=""Generatesln"">点击解决方案</button>
                </div>
            </div>

        </div>

        <div class=""layui-card-body"">
");
            WriteLiteral("            <table id=\"tb1\" class=\"layui-table\" lay-filter=\"tb1\"></table>\n");
            WriteLiteral("        </div>\n\n    </div>\n</div>\n<input id=\"status\" type=\"hidden\" />\n");
            DefineSection("js", async() => {
                WriteLiteral("\n    <script>\n        layui.config({\n            base: \'");
#nullable restore
#line 87 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
              Write(Url.Content("~/"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' //静态资源所在路径
        }).extend({
            index: 'lib/index'//主入口模块
            }).use(['index', 'table', ""laydate""], function () {
            var $ = layui.$
                , table = layui.table
                , layer = layui.layer
                , laydate = layui.laydate;


            var dataInfo = table.render({
                elem: '#tb1'
                , url: """);
#nullable restore
#line 99 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
                   Write(Url.Action("GetProjectList", "ProjectCodeGenerate"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"""
                , limit: 20
                , limits: [20, 40, 60, 80, 100, 500, 1000]
                , page: false //开启分页
                , done: function (res, curr, count) {
                    //如果是异步请求数据方式，res即为你接口返回的信息。
                    //如果是直接赋值的方式，res即为：{data: [], count: 99} data为当前页数据、count为数据总长度
                    //得到当前页码
                    //console.log(curr);
                    //得到数据总量
                    //console.log(count);
                }
                , totalRow: true
                , toolbar: '#toolbarDemo'//
                , defaultToolbar: ['filter', 'print', 'exports']
                , title: '数据库列表'
                , height: 'full-138'
                , cols: [[
                    { title: '序号', type: 'numbers', }
                    , { field: 'fileName', width: 520, title: '文件名称' }
                    //, { field: 'id', width: 80, title: 'ID', sort: true, align: 'center', hide: true }
                    , { field: 'fileType', width: 120, title: '文件类型' }
            ");
                WriteLiteral(@"        , { field: 'projectName', width: 120, title: '项目名称' }
                    , { field: 'projectType', width: 120, title: '项目类型' }

                    //, { field: 'upperlevelDirectoryName', width: 120, title: '上一级目录' }

                ]]
                , page: {
                    theme: '#a70000', first: '首页'
                    , last: '尾页'
                }
            });

            active = {
                reload: function () {
                    var projectTypeId = $(""#projectTypeId"").val();
                    var projectId = $(""#projectId"").val();
                    var databaseIds = $(""select[name='databaseIds']"").val();
                    table.reload('tb1', {
                        page: { curr: 1 }
                        , where: {
                            projectId: projectId,
                            projectTypeId: projectTypeId,
                            databaseIds: databaseIds.join("","")
                        }
                    }, 'data');
                }
    ");
                WriteLiteral(@"        };

                //监听头工具栏事件
            table.on('toolbar(tb1)', function (obj) {
                    var checkStatus = table.checkStatus(obj.config.id)
                        , data = checkStatus.data; //获取选中的数据
                    switch (obj.event) {
                        case 'add':
                            //layer.msg('添加');
                            add();
                            break;
                        case 'edit':
                            if (data.length === 0) {
                                layer.msg('请选择一行');
                            } else if (data.length > 1) {
                                layer.msg('只能同时编辑一个');
                            } else {
                                //layer.alert('编辑 [id]：' + checkStatus.data[0].uid);
                                edit(checkStatus.data[0].id);
                            }
                            break;
                        case 'del':
                            if (data.length === 0) {
            ");
                WriteLiteral(@"                    layer.msg('请选择一行');
                            } else {

                                layer.confirm('真的删除行么', function (index) {
                                    layer.close(index);
                                    //向服务端发送删除指令
                                    del(index,checkStatus.data[0].id);
                                });
                            }
                            break;
                    };
            });
            $('#searchbtn').on('click', function () {
                var type = $(this).data('type');
                active[type] ? active[type].call(this) : '';
            });

            $(""#btnGenerate"").on('click', function () {
                var projectTypeId = $(""#projectTypeId"").val();
                var projectId = $(""#projectId"").val();
                var databaseIds = $(""select[name='databaseIds']"").val();
                var layerindex = layer.load();
                var url = '");
#nullable restore
#line 192 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
                      Write(Url.Action("Generate", "ProjectCodeGenerate"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' + '?projectId=' + projectId + '&projectTypeId=' + projectTypeId + ""&databaseIds="" + databaseIds;
                var layerindex = layer.load();
                $.getJSON(url, function (result) {
                     layer.closeAll(); //疯狂模式，关闭所有层
                     if (result.code == 0) {
                           layer.msg(result.msg);
                           window.location.href = """);
#nullable restore
#line 198 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
                                              Write(Url.Action("DownloadZip", "ProjectCodeGenerate"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"?zipFilePath="" + result.data;
                     } else {
                           layer.msg(result.msg);
                     }
                });
            });
                $(""#btnGeneratesln"").on('click', function () {
                   
                   layer.prompt({
                    formType: 2,
                    title: '请输入解决方案名称',
                    },function (value, index, elem) {
                        var projectTypeId = $(""#projectTypeId"").val();
                        var projectId = $(""#projectId"").val();
                        var databaseIds = $(""select[name='databaseIds']"").val();
                        var url = '");
#nullable restore
#line 213 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
                              Write(Url.Action("Generatesln", "ProjectCodeGenerate"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' + '?projectId=' + projectId + '&projectTypeId=' + projectTypeId + '&slnname=' + value + ""&databaseIds="" + databaseIds;
                        var layerindex = layer.load();
                        $.getJSON(url, function (result) {
                            layer.closeAll(); //疯狂模式，关闭所有层
                            if (result.code == 0) {
                                layer.msg(result.msg);
                                window.location.href = """);
#nullable restore
#line 219 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
                                                   Write(Url.Action("DownloadZip", "ProjectCodeGenerate"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"?zipFilePath="" + result.data;
                            } else {
                                layer.msg(result.msg);
                            }
                        });

                    });
               
             });

             //新增
            function add() {
                var url = '");
#nullable restore
#line 231 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
                      Write(Url.Action("Add", "FileTemplate"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
                var index =layui.layer.open({
                    type: 2,
                    area: ['80%', '60%'],
                    content: url,
                    cancel: function (index, layero) {
                        layer.close(index);
                        return false;
                    },
                    end: function () {
                        if ($(""#status"").val() == 0) {
                            dataInfo.reload();
                            $(""#status"").val(-100);
                        }
                    }
                });
                layer.full(index);
            }
            //编辑
            function edit(id) {
                var url = '");
#nullable restore
#line 251 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
                      Write(Url.Action("Edit", "FileTemplate"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' + '?Id=' + id;
               var index= layui.layer.open({
                    type: 2,
                    area: ['80%', '60%'],
                    content: url,
                    cancel: function (index, layero) {
                        layer.close(index);
                        return false;
                    },
                    end: function () {
                        if ($(""#status"").val() == 0) {
                            dataInfo.reload();
                            $(""#status"").val(-100);
                        }
                    }
               });
               layer.full(index);
            }
            //删除
            function del(index,id) {
                var url = '");
#nullable restore
#line 271 "D:\mycode\NetCore代码生成器\lym-netcore-web-api-template\Lym.Mvc.Admin\Views\ProjectCodeGenerate\List.cshtml"
                      Write(Url.Action("Del", "FileTemplate"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' + '?Id=' + id;
                $.getJSON(url, function (result) {
                    $(""#status"").val(result.code);
                    returnBackMsg(index, result, ""记录删除"");
                    if ($(""#status"").val() === '0') {
                        dataInfo.reload();
                        $(""#status"").val(-100);
                    }
                });
            }

                $('#btnsearch').on('click', function () {
                    var type = $(this).data('type');
                    active[type] ? active[type].call(this) : '';
                });
        });

        // result{data,msg,code} action 0 添加，1 修改
        function returnBackMsg(index, result, action) {
            layer.close(index);
            var code = 0;
            var status = """";
            if (result.code == 0) {
                code = 6;
                status = ""成功"";
            }
            else {
                code = 5;
                status = ""失败"";
            }
            layer.msg(action + status, { icon:");
                WriteLiteral(" code });\n        }\n    </script>\n");
            }
            );
            WriteLiteral("\n\n\n\n\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
